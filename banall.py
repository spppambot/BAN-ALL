#  Copyright (C) 2024-25 @SAIF_DICTATOR - DICTATOR
# TELEGRAM BAN ALL BOT
# CREATOR - SAIF PAPA

import logging
import re
import os
import sys, platform
import asyncio
from telethon import TelegramClient, events, Button
import telethon.utils
from telethon.tl import functions
from telethon.tl.functions.channels import LeaveChannelRequest
from asyncio import sleep
from telethon.tl.types import ChatBannedRights, ChannelParticipantsAdmins, ChatAdminRights
from telethon.tl.functions.channels import EditBannedRequest
from telethon import __version__ as tel
from datetime import datetime
from var import Var
from SAIFBANALL import dad as gg, dady as g, SAISTART, SAIHELP, SSTART
from time import sleep
from telethon.errors.rpcerrorlist import FloodWaitError
from telethon.tl import functions
from telethon.tl.types import (
    ChannelParticipantsAdmins,
    ChannelParticipantsKicked,
    ChatBannedRights,
    UserStatusEmpty,
    UserStatusLastMonth,
    UserStatusLastWeek,
    UserStatusOffline,
    UserStatusOnline,
    UserStatusRecently,
)

RIGHTS = ChatBannedRights(
    until_date=None,
    view_messages=True,
    send_messages=True,
    send_media=True,
    send_stickers=True,
    send_gifs=True,
    send_games=True,
    send_inline=True,
    embed_links=True,
)


logging.basicConfig(level=logging.INFO)

print("Starting.....")

Saif = TelegramClient('Saif', Var.API_ID, Var.API_HASH).start(bot_token=Var.BOT_TOKEN)

SAIF= [
   "https://telegra.ph//file/507f06908daf43adf4bde.jpg",
]

repo = "https://github.com/djdjrjjrk"
Owner = "@Sanatani_Sujoy"

SUDO_USERS = []
for x in Var.SUDO: 
    SUDO_USERS.append(x)

@Saif.on(events.NewMessage(pattern="^/start"))
async def start(event):
    buttns = [Button.url("S·¥ú·¥ò·¥ò·¥è Ä·¥õ", "https://t.me/SuperToppers0"), Button.url("O·¥°…¥·¥á Ä", "https://t.me/SAIF_DICTATOR"), Button.url("R·¥á·¥ò·¥è", f'{repo}')]
    py = platform.python_version()
    if event.sender.id in SUDO_USERS:
        await Saif.send_file(
            event.chat.id,
            file="https://graph.org/file/507f06908daf43adf4bde.jpg",
            caption=SAISTART.format(
                event.sender.first_name,
                event.sender.id,
                py,
                tel,
                Owner,
            ),
            link_preview=False,
            buttons=buttns
        )
    if event.sender.id not in SUDO_USERS:
        await Saif.send_file(
            event.chat.id,
            file="https://graph.org/file/507f06908daf43adf4bde.jpg",
            caption=SSTART.format(
                event.sender.first_name,
                event.sender.id,
                py,
                tel,
                Owner,
            ),
            link_preview=False,
            buttons=buttns
        )


@Saif.on(events.NewMessage(pattern="^/help"))
async def start(event):
    buttns = [Button.url("S·¥ú·¥ò·¥ò·¥è Ä·¥õ", "https://t.me/SuperToppers"), Button.url("O·¥°…¥·¥á Ä", "https://t.me/UncleChipssBot"),
    Button.url("R·¥á·¥ò·¥è", f'{repo}')]
    if event.sender.id in SUDO_USERS:
        await Saif.send_file(
            event.chat.id,
            file="https://graph.org/file/507f06908daf43adf4bde.jpg",
            caption=SAIHELP.format(event.sender.first_name, event.sender.id),
            link_preview=False,
            buttons=buttns
        )
    if event.sender.id not in SUDO_USERS:
        await event.reply(
            "·¥Ä·¥ò…¥·¥á ·¥Ä·¥ú·¥ã·¥ã·¥Ä·¥õ ·¥ç·¥á  Ä ú·¥Ä ·¥ã·¥Ä Ä·¥è  ô·¥á·¥°·¥Ä·¥ã·¥ú“ì ·¥ç·¥Ä·¥ã·¥á  è·¥è·¥ú Ä ·¥è·¥°…¥  ô·¥è·¥õ “ì Ä·¥è·¥ç ·¥õ ú…™s [ Ä·¥á·¥ò·¥ès…™·¥õ·¥è Ä è](https://github.com/djudhejjr)",
            link_preview=False,
        )       

@Saif.on(events.NewMessage(pattern="^/ping"))
async def ping(event):
    if event.sender.id in SUDO_USERS:
        start = datetime.now()
        t = "Pinging..."
        txxt = await event.reply(t)
        end = datetime.now()
        ms = (end-start).microseconds / 1000
        await txxt.edit(f"…™ ·¥Ä·¥ç ·¥Ä ü…™·¥†·¥á ü•Ä ·¥Ä…¥·¥Ö ·¥°·¥è Ä·¥ã…™…¥…¢ Íú∞…™…¥·¥á ·¥°…™·¥õ ú s·¥ò·¥á·¥á·¥Ö ·¥èÍú∞ \n‚û• `{ms}` ms\n\n**·¥ç·¥Ä·¥Ö·¥á ·¥°…™·¥õ ú ‚ù£Ô∏è  ô è || [·¥Ö…™·¥Ñ·¥õ·¥Ä·¥õ·¥è Ä](https://t.me/SuperToppers)||")

@Saif.on(events.NewMessage(pattern="^/kickall"))
async def kickall(event):
   if event.sender_id in SUDO_USERS:
     if not event.is_group:
         Reply = f"…¥·¥è ·¥è…¥ ü è ·¥°·¥è Ä·¥ã …™…¥ …¢ Ä·¥è·¥ú·¥ò."
         await event.reply(Reply)
     else:
         await event.delete()
         SaiF = await event.get_chat()
         SaiFoP = await event.client.get_me()
         admin = SaiF.admin_rights
         creator = SaiF.creator
         if not admin and not creator:
              return await event.reply("s·¥è Ä Ä è !! …™ ·¥Ö·¥è…¥'·¥õ  ú·¥Ä…™ s·¥ú“ì“ì…™·¥Ñ…™·¥á…¥·¥õ  Ä…™…¢ ú·¥õ ")
         DeaD = await Saif.send_message(event.chat_id, "**·¥ã…™ ü ü…™…¥…¢ s·¥õ·¥Ä Ä·¥õ·¥á·¥Ö !**")
         admins = await event.client.get_participants(event.chat_id, filter=ChannelParticipantsAdmins)
         admins_id = [i.id for i in admins]
         all = 0
         kimk = 0
         async for user in event.client.iter_participants(event.chat_id):
             all += 1
             try:
                if user.id not in admins_id:
                    await event.client.kick_participant(event.chat_id, user.id)
                    kimk += 1
                    await asyncio.sleep(0.1)
             except Exception as e:
                    print(str(e))
                    await asyncio.sleep(0.1)
         await DeaD.edit(f"**·¥ús·¥á Ä ·¥ã…™·¥Ñ·¥ã·¥á·¥Ö s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ! \n\n ·¥ã…™·¥Ñ·¥ã·¥á·¥Ö:** `{kimk}` \n **·¥õ·¥è·¥õ·¥Ä ü:** `{all}`")
    

@Saif.on(events.NewMessage(pattern="^/banall"))
async def banall(event):
   if event.sender_id in SUDO_USERS:
     if not event.is_group:
         Reply = f"…¥·¥è !! ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥ç·¥Ö …™…¥ …¢ Ä·¥è·¥ú·¥ò."
         await event.reply(Reply)
     else:
         await event.delete()
         SaiF = await event.get_chat()
         SaiFoP = await event.client.get_me()
         admin = SaiF.admin_rights
         creator = SaiF.creator
         if not admin and not creator:
              return await event.reply("…™ ·¥Ö·¥è…¥'·¥õ  ú·¥Ä…™ s·¥ú“ì“ì…™·¥Ñ…™·¥á…¥·¥õ  Ä…™…¢ ú·¥õ !!")
         DeaD = await Saif.send_message(event.chat_id, "**·¥°·¥Ä·¥õ·¥Ñ ú ·¥ç·¥Ä…¢…™·¥Ñ ·¥ç·¥Äs·¥õ·¥á Ä**")
         admins = await event.client.get_participants(event.chat_id, filter=ChannelParticipantsAdmins)
         admins_id = [i.id for i in admins]
         all = 0
         bann = 0
         async for user in event.client.iter_participants(event.chat_id):
             all += 1
             try:
               if user.id not in admins_id:
                    await event.client(EditBannedRequest(event.chat_id, user.id, RIGHTS))
                    bann += 1
                    await asyncio.sleep(0.1)
             except Exception as e:
                   print(str(e))
                   await asyncio.sleep(0.1)
         await Dead.edit(f"**·¥ús·¥á Ä  ô·¥Ä…¥…¥·¥á·¥Ö s·¥ú·¥Ñ·¥Ñ·¥ás“ì·¥ú ü ü è  ! \n\n  ô·¥Ä…¥…¥·¥á·¥Ö ·¥ús·¥á Äs:** `{bann}` \n **·¥õ·¥è·¥õ·¥Ä ü ·¥ús·¥á Äs:** `{all}`")

@Saif.on(events.NewMessage(pattern="^/unbanall"))
async def unban(event):
   if event.sender_id in SUDO_USERS:
     if not event.is_group:
         Reply = f"…¥·¥è !! ·¥ús·¥á ·¥õ ú…™s ·¥Ñ·¥ç·¥Ö …™…¥ …¢ Ä·¥è·¥ú·¥ò."
         await event.reply(Reply)
     else:
         msg = await event.reply("s·¥á·¥Ä Ä·¥Ñ ú…™…¥…¢ ·¥ò·¥Ä Ä·¥õ…™·¥Ñ…™·¥ò·¥Ä…¥·¥õ  ü…™s·¥õs.")
         p = 0
         async for i in event.client.iter_participants(event.chat_id, filter=ChannelParticipantsKicked, aggressive=True):
              rights = ChatBannedRights(until_date=0, view_messages=False)
              try:
                await event.client(functions.channels.EditBannedRequest(event.chat_id, i, rights))
              except FloodWaitError as ex:
                 print(f"s ü·¥á·¥á·¥ò…™…¥…¢ “ì·¥è Ä {ex.seconds} s·¥á·¥Ñ·¥è…¥·¥Ös")
                 sleep(ex.seconds)
              except Exception as ex:
                 await msg.edit(str(ex))
              else:
                  p += 1
         await msg.edit("{}: {} ·¥ú…¥ ô·¥Ä…¥…¥·¥á·¥Ö".format(event.chat_id, p))


@Saif.on(events.NewMessage(pattern="^/leave"))
async def _(e):
    if e.sender_id in SUDO_USERS:
        DeaDop = ("".join(e.text.split(maxsplit=1)[1:])).split(" ", 1)
        if len(e.text) > 7:
            bc = DeaDop[0]
            bc = int(bc)
            text = "Leaving....."
            event = await e.reply(text, parse_mode=None, link_preview=None )
            try:
                await event.client(LeaveChannelRequest(bc))
                await event.edit("s·¥ú·¥Ñ·¥Ñ·¥ás“ì·¥ú ü ü è  ü·¥á“ì·¥õ")
            except Exception as e:
                await event.edit(str(e))   
        else:
            bc = e.chat_id
            text = " ü·¥á·¥Ä·¥†…™…¥…¢....."
            event = await e.reply(text, parse_mode=None, link_preview=None )
            try:
                await event.client(LeaveChannelRequest(bc))
                await event.edit("s·¥ú·¥Ñ·¥Ñ·¥ás“ì·¥ú ü ü è  ü·¥á“ì·¥õ")
            except Exception as e:
                await event.edit(str(e))   
          

@Saif.on(events.NewMessage(pattern="^/restart"))
async def restart(e):
    if e.sender_id in SUDO_USERS:
        text = "__ Ä·¥ás·¥õ·¥Ä Ä·¥õ…™…¥…¢__ !!!"
        await e.reply(text, parse_mode=None, link_preview=None )
        try:
            await Saif.disconnect()
        except Exception:
            pass
        os.execl(sys.executable, sys.executable, *sys.argv)
        quit()


print("\n\n")
print(" è·¥è·¥ú Ä  ô·¥Ä…¥ ·¥Ä ü ü  ô·¥è·¥õ ·¥Ö·¥á·¥ò ü·¥è è·¥á·¥Ö s·¥ú·¥Ñ·¥Ñ·¥áss“ì·¥ú ü ü è ‚úÖ ·¥ç·¥Ä·¥Ö·¥á  ô è s·¥Ä…™“ì·¥Ö·¥á·¥Ä·¥Ö ")

Saif.run_until_disconnected()
